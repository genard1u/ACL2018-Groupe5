@startuml
class Laby
  
  class LabyController

  class Ressources {
    +{static}int WIDTH
    +{static}int HEIGHT
    +{static}int SCALING
    +{static}int scaling(int)
  }

  class LabyPainter {
    -int width
    -int height
  }

  class GameEngineGraphical

  Interface GamePainter {
    +void draw(BufferedImage)
  }

  Interface GameController

  Enum Cmd

  GameController <|.. LabyController
  GamePainter <|.. LabyPainter
  LabyController -- "1" Cmd
  GameEngineGraphical <-- Laby
  Laby --> Game
  Laby -> LabyPainter
  LabyController <- Laby

package fr.ul.acl.model {
  abstract class Composant {
    #int posX
    #int posY
  }

  abstract class Dynamique {
    #void up()
    #void down()
    #void left()
    #void right()
  }

  class Heros {
    +void move(Plateau, Cmd)
  }

  class Jeu {
    +int hauteurPlateau()
    +int largeurPlateau()
  }

  class Plateau {
    -int hauteur
    -int largeur   
    +String getTypeCase(int, int)
    +boolean isAccesible(int, int)
  }

  abstract class Statique {
    -String type
    +{abstract} String getAffichage()
    +String getType()
  }
  
  class Mur
  
  Composant <|-- Dynamique
  Dynamique <|-- Heros
  Statique <|-- Mur
  Statique -|> Composant
  
  Jeu -* "1" Heros
  Jeu -* Plateau

  Plateau -* Statique
}

  interface Game {
    +void evolve(Cmd)
    +boolean isFinished()
  }
  

Game <|.. Jeu

hide empty members
@enduml