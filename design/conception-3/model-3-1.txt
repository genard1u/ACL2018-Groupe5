@startuml
class Laby
  
  class LabyController
   class Ressources {
    +{static}int WIDTH
    +{static}int HEIGHT
    +{static}int SCALING
    +{static}int scaling(int)
  }
   class LabyPainter {
    -int width
    -int height
  }
   class GameEngineGraphical
   Interface GamePainter {
    +void draw(BufferedImage)
  }

  class Textures
  Textures -> "*" Image
  LabyPainter -> "1" Textures
   Interface GameController
   Enum Cmd
   GameController <|.. LabyController
  GamePainter <|.. LabyPainter
  LabyController -- "1" Cmd
  GameEngineGraphical <-- Laby
  Laby --> Game
  Laby -> LabyPainter
  LabyController <- Laby
 package fr.ul.acl.model {
  abstract class Composant {
    #int posX
    #int posY
  }
   abstract class Dynamique {
    #void up()
    #void down()
    #void left()
    #void right()
  }
   class Heros {
    +void move(Plateau, Cmd)
  }



  Abstract Class Monster{
    +action()
  }

  class IARandom
  class IAFollow

  Monster "*" -- "1" Jeu
  Monster --|> Dynamique
  IAFollow --|> Monster
  IARandom --|> Monster
   class Jeu {
    +int hauteurPlateau()
    +int largeurPlateau()
  }
   class Plateau {
    -int hauteur
    -int largeur   
    +String getTypeCase(int, int)
    +boolean isAccesible(int, int)
  }
   abstract class Statique {
    -String type
    +{abstract} String getAffichage()
    +String getType()
  }

  abstract class Magic{
    +effet()
  }
  
  class Mur

  class Teleport{
    +int posX
    +int posY
  }

  class Trap

  class Start

  class Treasure

  class Invincible
  
  Composant <|- Dynamique
  Dynamique <|-- Heros
  Statique <|-- Mur
  Composant <|-- Statique
  
  Jeu *- "1" Heros
  Plateau -* Jeu 
  Plateau *- Statique

  Statique <|-- Magic
  Statique <|-- Start
  Magic <|-- Teleport
  Magic <|-- Trap
  Magic <|-- Treasure
  Magic <|-- Invincible


}
   interface Game {
    +void evolve(Cmd)
    +boolean isFinished()
  }
  
 Game <|.. Jeu
 hide empty members
@enduml